// <auto-generated />
using System;
using Datalink;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Datalink.Migrations
{
    [DbContext(typeof(ForestContext))]
    partial class ForestContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DomainOfModels.Forest", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Biome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForestName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Forest");
                });

            modelBuilder.Entity("DomainOfModels.Tree", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ForestID")
                        .HasColumnType("int");

                    b.Property<string>("TreeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ForestID");

                    b.ToTable("Trees");
                });

            modelBuilder.Entity("DomainOfModels.Tree", b =>
                {
                    b.HasOne("DomainOfModels.Forest", null)
                        .WithMany("Trees")
                        .HasForeignKey("ForestID");
                });

            modelBuilder.Entity("DomainOfModels.Forest", b =>
                {
                    b.Navigation("Trees");
                });
#pragma warning restore 612, 618
        }
    }
}
